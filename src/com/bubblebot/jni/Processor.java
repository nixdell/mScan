/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.bubblebot.jni;

import com.opencv.jni.Mat;

/** Processor - for processing images that are stored in an image pool
*/
public class Processor {
  private long swigCPtr;
  protected boolean swigCMemOwn;
  public Processor(long cPtr, boolean cMemoryOwn) {
	swigCMemOwn = cMemoryOwn;
	swigCPtr = cPtr;
  }
  public static long getCPtr(Processor obj) {
	return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      bubblebotJNI.delete_Processor(swigCPtr);
    }
    swigCPtr = 0;
  }

  public Processor() {
    this(bubblebotJNI.new_Processor(), true);
  }

  public String ProcessForm(String filename) {
    return bubblebotJNI.Processor_ProcessForm(swigCPtr, this, filename);
  }

  public boolean DetectOutline(String filename, boolean fIgnoreDatFile) {
    return bubblebotJNI.Processor_DetectOutline__SWIG_0(swigCPtr, this, filename, fIgnoreDatFile);
  }

  public boolean DetectOutline(String filename) {
    return bubblebotJNI.Processor_DetectOutline__SWIG_1(swigCPtr, this, filename);
  }

  public void warpImage(SWIGTYPE_p_IplImage img, SWIGTYPE_p_IplImage warpImg, SWIGTYPE_p_CvPoint cornerPoints) {
    bubblebotJNI.Processor_warpImage(swigCPtr, this, SWIGTYPE_p_IplImage.getCPtr(img), SWIGTYPE_p_IplImage.getCPtr(warpImg), SWIGTYPE_p_CvPoint.getCPtr(cornerPoints));
  }

  public SWIGTYPE_p_std__vectorTcv__Point_t findBubbles(SWIGTYPE_p_IplImage pImage) {
    return new SWIGTYPE_p_std__vectorTcv__Point_t(bubblebotJNI.Processor_findBubbles(swigCPtr, this, SWIGTYPE_p_IplImage.getCPtr(pImage)), true);
  }

  public SWIGTYPE_p_CvPoint findLineValues(SWIGTYPE_p_IplImage img) {
    long cPtr = bubblebotJNI.Processor_findLineValues(swigCPtr, this, SWIGTYPE_p_IplImage.getCPtr(img));
    return (cPtr == 0) ? null : new SWIGTYPE_p_CvPoint(cPtr, false);
  }

  public int processImage(String imagefile, String bubblefile, float weight) {
    return bubblebotJNI.Processor_processImage(swigCPtr, this, imagefile, bubblefile, weight);
  }

}
