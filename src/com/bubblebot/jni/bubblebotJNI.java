/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.bubblebot.jni;

import com.opencv.jni.*; //import the android-opencv jni wrappers

class bubblebotJNI {

	static {
		try {
			//load the cvcamera library, make sure that libcvcamera.so is in your <project>/libs/armeabi directory
			//so that android sdk automatically installs it along with the app.
			
			//the android-opencv lib must be loaded first inorder for the cvcamera
			//lib to be found
			//check the apk generated, by opening it in an archive manager, to verify that
			//both these libraries are present
			System.loadLibrary("android-opencv");
			System.loadLibrary("bubblebot");
		} catch (UnsatisfiedLinkError e) {
			//badness
			throw e;
		}
	}


  public final static native long new_Feedback();
  public final static native void delete_Feedback(long jarg1);
  public final static native void Feedback_ResetScore(long jarg1, Feedback jarg1_);
  public final static native int Feedback_DetectOutline(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, double jarg4, double jarg5);
  public final static native void Feedback_drawText__SWIG_0(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, String jarg4, int jarg5, int jarg6, long jarg7, double jarg8, double jarg9);
  public final static native void Feedback_drawText__SWIG_1(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, String jarg4, int jarg5, int jarg6, long jarg7, double jarg8);
  public final static native void Feedback_drawText__SWIG_2(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, String jarg4, int jarg5, int jarg6, long jarg7);
  public final static native void Feedback_drawText__SWIG_3(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, String jarg4, int jarg5, int jarg6);
  public final static native void Feedback_drawText__SWIG_4(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, String jarg4, int jarg5);
  public final static native void Feedback_drawText__SWIG_5(long jarg1, Feedback jarg1_, int jarg2, long jarg3, image_pool jarg3_, String jarg4);
  public final static native long new_Processor();
  public final static native void delete_Processor(long jarg1);
  public final static native String Processor_ProcessForm(long jarg1, Processor jarg1_, String jarg2);
  public final static native boolean Processor_DetectOutline__SWIG_0(long jarg1, Processor jarg1_, String jarg2, boolean jarg3);
  public final static native boolean Processor_DetectOutline__SWIG_1(long jarg1, Processor jarg1_, String jarg2);
  public final static native void Processor_warpImage(long jarg1, Processor jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long Processor_findBubbles(long jarg1, Processor jarg1_, long jarg2);
  public final static native long Processor_findLineValues(long jarg1, Processor jarg1_, long jarg2);
  public final static native void Processor_processSegment(long jarg1, Processor jarg1_, String jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native int Processor_processImage(long jarg1, Processor jarg1_, String jarg2, String jarg3, float jarg4);
}
